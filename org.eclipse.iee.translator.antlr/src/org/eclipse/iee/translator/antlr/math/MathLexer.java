// Generated from D:\sergey\antlr\math\Math.g4 by ANTLR 4.0
package org.eclipse.iee.translator.antlr.math;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MathLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__22=1, T__21=2, T__20=3, T__19=4, T__18=5, T__17=6, T__16=7, T__15=8, 
		T__14=9, T__13=10, T__12=11, T__11=12, T__10=13, T__9=14, T__8=15, T__7=16, 
		T__6=17, T__5=18, T__4=19, T__3=20, T__2=21, T__1=22, T__0=23, MATH_NAME=24, 
		INTERNAL_FUNCTION_NAME=25, LETTER=26, INT=27, WS=28, FLOAT=29;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'%'", "']'", "'^'", "')'", "'.'", "','", "'+'", "'*'", "'-'", "'['", 
		"'('", "'<'", "'='", "'!='", "'<='", "'&&'", "'||'", "'>'", "'{'", "'/'", 
		"'=='", "'>='", "'}'", "MATH_NAME", "INTERNAL_FUNCTION_NAME", "LETTER", 
		"INT", "WS", "FLOAT"
	};
	public static final String[] ruleNames = {
		"T__22", "T__21", "T__20", "T__19", "T__18", "T__17", "T__16", "T__15", 
		"T__14", "T__13", "T__12", "T__11", "T__10", "T__9", "T__8", "T__7", "T__6", 
		"T__5", "T__4", "T__3", "T__2", "T__1", "T__0", "MATH_NAME", "INTERNAL_FUNCTION_NAME", 
		"LETTER", "INT", "WS", "FLOAT", "DIGIT", "EXP"
	};


	public MathLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Math.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 27: WS_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\2\4\37\u00e8\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b"+
		"\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20"+
		"\t\20\4\21\t\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27"+
		"\t\27\4\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36"+
		"\t\36\4\37\t\37\4 \t \3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7"+
		"\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17"+
		"\3\17\3\20\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\24\3\24"+
		"\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3\31"+
		"\3\31\3\31\3\31\3\31\5\31~\n\31\3\31\3\31\3\31\3\31\3\31\5\31\u0085\n"+
		"\31\7\31\u0087\n\31\f\31\16\31\u008a\13\31\3\32\3\32\3\32\3\32\3\32\3"+
		"\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3"+
		"\32\3\32\3\32\3\32\3\32\3\32\3\32\5\32\u00a6\n\32\3\33\3\33\3\34\6\34"+
		"\u00ab\n\34\r\34\16\34\u00ac\3\34\5\34\u00b0\n\34\3\35\3\35\3\35\3\35"+
		"\3\36\6\36\u00b7\n\36\r\36\16\36\u00b8\3\36\3\36\7\36\u00bd\n\36\f\36"+
		"\16\36\u00c0\13\36\3\36\5\36\u00c3\n\36\3\36\5\36\u00c6\n\36\3\36\6\36"+
		"\u00c9\n\36\r\36\16\36\u00ca\3\36\5\36\u00ce\n\36\3\36\5\36\u00d1\n\36"+
		"\3\36\3\36\6\36\u00d5\n\36\r\36\16\36\u00d6\3\36\5\36\u00da\n\36\3\36"+
		"\5\36\u00dd\n\36\5\36\u00df\n\36\3\37\3\37\3 \3 \5 \u00e5\n \3 \3 \2!"+
		"\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21\n\1\23\13\1\25\f\1\27"+
		"\r\1\31\16\1\33\17\1\35\20\1\37\21\1!\22\1#\23\1%\24\1\'\25\1)\26\1+\27"+
		"\1-\30\1/\31\1\61\32\1\63\33\1\65\34\1\67\35\19\36\2;\37\1=\2\1?\2\1\3"+
		"\2\n\4C\\c|\4NNnn\5\13\f\17\17\"\"\4NNnn\4NNnn\4NNnn\4GGgg\4--//\u00fe"+
		"\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2"+
		"\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2"+
		"\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2"+
		"\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2"+
		"\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3"+
		"\2\2\2\3A\3\2\2\2\5C\3\2\2\2\7E\3\2\2\2\tG\3\2\2\2\13I\3\2\2\2\rK\3\2"+
		"\2\2\17M\3\2\2\2\21O\3\2\2\2\23Q\3\2\2\2\25S\3\2\2\2\27U\3\2\2\2\31W\3"+
		"\2\2\2\33Y\3\2\2\2\35[\3\2\2\2\37^\3\2\2\2!a\3\2\2\2#d\3\2\2\2%g\3\2\2"+
		"\2\'i\3\2\2\2)k\3\2\2\2+m\3\2\2\2-p\3\2\2\2/s\3\2\2\2\61u\3\2\2\2\63\u00a5"+
		"\3\2\2\2\65\u00a7\3\2\2\2\67\u00aa\3\2\2\29\u00b1\3\2\2\2;\u00de\3\2\2"+
		"\2=\u00e0\3\2\2\2?\u00e2\3\2\2\2AB\7\'\2\2B\4\3\2\2\2CD\7_\2\2D\6\3\2"+
		"\2\2EF\7`\2\2F\b\3\2\2\2GH\7+\2\2H\n\3\2\2\2IJ\7\60\2\2J\f\3\2\2\2KL\7"+
		".\2\2L\16\3\2\2\2MN\7-\2\2N\20\3\2\2\2OP\7,\2\2P\22\3\2\2\2QR\7/\2\2R"+
		"\24\3\2\2\2ST\7]\2\2T\26\3\2\2\2UV\7*\2\2V\30\3\2\2\2WX\7>\2\2X\32\3\2"+
		"\2\2YZ\7?\2\2Z\34\3\2\2\2[\\\7#\2\2\\]\7?\2\2]\36\3\2\2\2^_\7>\2\2_`\7"+
		"?\2\2` \3\2\2\2ab\7(\2\2bc\7(\2\2c\"\3\2\2\2de\7~\2\2ef\7~\2\2f$\3\2\2"+
		"\2gh\7@\2\2h&\3\2\2\2ij\7}\2\2j(\3\2\2\2kl\7\61\2\2l*\3\2\2\2mn\7?\2\2"+
		"no\7?\2\2o,\3\2\2\2pq\7@\2\2qr\7?\2\2r.\3\2\2\2st\7\177\2\2t\60\3\2\2"+
		"\2u\u0088\5\65\33\2v\u0087\5\65\33\2w\u0087\5\67\34\2xy\7a\2\2yz\7}\2"+
		"\2z}\3\2\2\2{~\5\61\31\2|~\5\67\34\2}{\3\2\2\2}|\3\2\2\2~\177\3\2\2\2"+
		"\177\u0080\7\177\2\2\u0080\u0087\3\2\2\2\u0081\u0084\7a\2\2\u0082\u0085"+
		"\5\61\31\2\u0083\u0085\5\67\34\2\u0084\u0082\3\2\2\2\u0084\u0083\3\2\2"+
		"\2\u0085\u0087\3\2\2\2\u0086v\3\2\2\2\u0086w\3\2\2\2\u0086x\3\2\2\2\u0086"+
		"\u0081\3\2\2\2\u0087\u008a\3\2\2\2\u0088\u0086\3\2\2\2\u0088\u0089\3\2"+
		"\2\2\u0089\62\3\2\2\2\u008a\u0088\3\2\2\2\u008b\u008c\7P\2\2\u008c\u008d"+
		"\7K\2\2\u008d\u008e\7p\2\2\u008e\u008f\7v\2\2\u008f\u0090\7g\2\2\u0090"+
		"\u0091\7i\2\2\u0091\u0092\7t\2\2\u0092\u0093\7c\2\2\u0093\u0094\7v\2\2"+
		"\u0094\u00a6\7g\2\2\u0095\u0096\7P\2\2\u0096\u0097\7U\2\2\u0097\u0098"+
		"\7w\2\2\u0098\u00a6\7o\2\2\u0099\u00a6\7F\2\2\u009a\u009b\7R\2\2\u009b"+
		"\u009c\7t\2\2\u009c\u009d\7q\2\2\u009d\u009e\7f\2\2\u009e\u009f\7w\2\2"+
		"\u009f\u00a0\7e\2\2\u00a0\u00a6\7v\2\2\u00a1\u00a2\7U\2\2\u00a2\u00a3"+
		"\7s\2\2\u00a3\u00a4\7t\2\2\u00a4\u00a6\7v\2\2\u00a5\u008b\3\2\2\2\u00a5"+
		"\u0095\3\2\2\2\u00a5\u0099\3\2\2\2\u00a5\u009a\3\2\2\2\u00a5\u00a1\3\2"+
		"\2\2\u00a6\64\3\2\2\2\u00a7\u00a8\t\2\2\2\u00a8\66\3\2\2\2\u00a9\u00ab"+
		"\5=\37\2\u00aa\u00a9\3\2\2\2\u00ab\u00ac\3\2\2\2\u00ac\u00aa\3\2\2\2\u00ac"+
		"\u00ad\3\2\2\2\u00ad\u00af\3\2\2\2\u00ae\u00b0\t\3\2\2\u00af\u00ae\3\2"+
		"\2\2\u00af\u00b0\3\2\2\2\u00b08\3\2\2\2\u00b1\u00b2\t\4\2\2\u00b2\u00b3"+
		"\3\2\2\2\u00b3\u00b4\b\35\2\2\u00b4:\3\2\2\2\u00b5\u00b7\5=\37\2\u00b6"+
		"\u00b5\3\2\2\2\u00b7\u00b8\3\2\2\2\u00b8\u00b6\3\2\2\2\u00b8\u00b9\3\2"+
		"\2\2\u00b9\u00ba\3\2\2\2\u00ba\u00be\7\60\2\2\u00bb\u00bd\5=\37\2\u00bc"+
		"\u00bb\3\2\2\2\u00bd\u00c0\3\2\2\2\u00be\u00bc\3\2\2\2\u00be\u00bf\3\2"+
		"\2\2\u00bf\u00c2\3\2\2\2\u00c0\u00be\3\2\2\2\u00c1\u00c3\5? \2\u00c2\u00c1"+
		"\3\2\2\2\u00c2\u00c3\3\2\2\2\u00c3\u00c5\3\2\2\2\u00c4\u00c6\t\5\2\2\u00c5"+
		"\u00c4\3\2\2\2\u00c5\u00c6\3\2\2\2\u00c6\u00df\3\2\2\2\u00c7\u00c9\5="+
		"\37\2\u00c8\u00c7\3\2\2\2\u00c9\u00ca\3\2\2\2\u00ca\u00c8\3\2\2\2\u00ca"+
		"\u00cb\3\2\2\2\u00cb\u00cd\3\2\2\2\u00cc\u00ce\5? \2\u00cd\u00cc\3\2\2"+
		"\2\u00cd\u00ce\3\2\2\2\u00ce\u00d0\3\2\2\2\u00cf\u00d1\t\6\2\2\u00d0\u00cf"+
		"\3\2\2\2\u00d0\u00d1\3\2\2\2\u00d1\u00df\3\2\2\2\u00d2\u00d4\7\60\2\2"+
		"\u00d3\u00d5\5=\37\2\u00d4\u00d3\3\2\2\2\u00d5\u00d6\3\2\2\2\u00d6\u00d4"+
		"\3\2\2\2\u00d6\u00d7\3\2\2\2\u00d7\u00d9\3\2\2\2\u00d8\u00da\5? \2\u00d9"+
		"\u00d8\3\2\2\2\u00d9\u00da\3\2\2\2\u00da\u00dc\3\2\2\2\u00db\u00dd\t\7"+
		"\2\2\u00dc\u00db\3\2\2\2\u00dc\u00dd\3\2\2\2\u00dd\u00df\3\2\2\2\u00de"+
		"\u00b6\3\2\2\2\u00de\u00c8\3\2\2\2\u00de\u00d2\3\2\2\2\u00df<\3\2\2\2"+
		"\u00e0\u00e1\4\62;\2\u00e1>\3\2\2\2\u00e2\u00e4\t\b\2\2\u00e3\u00e5\t"+
		"\t\2\2\u00e4\u00e3\3\2\2\2\u00e4\u00e5\3\2\2\2\u00e5\u00e6\3\2\2\2\u00e6"+
		"\u00e7\5\67\34\2\u00e7@\3\2\2\2\26\2}\u0084\u0086\u0088\u00a5\u00ac\u00af"+
		"\u00b8\u00be\u00c2\u00c5\u00ca\u00cd\u00d0\u00d6\u00d9\u00dc\u00de\u00e4";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
	}
}