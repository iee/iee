grammar org.eclipse.iee.translator.jmole.math.Math with org.eclipse.xtext.common.Terminals
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
generate math "http://www.eclipse.org/iee/translator/jmole/math/Math"

//Formula:
//	expression=Expression;

Statement:
	functionDefenition=FunctionDefinition |
	formula=Formula
;

Formula:
	expression=(Addition)
	;

Addition returns Expression:
	Multiplication ({Addition.left=current} '+' right=Multiplication | {Subtraction.left=current} '-' right=Multiplication)*;

Multiplication returns Expression:
	Power ({Multiplication.left=current} '*' right=Power | {Division.left=current} '/' right=Power)*;

Power returns Expression:
	Primary ({Power.left=current} '^' right=Primary)?;

Primary returns Expression:
	{Variable} name=ID |
	{Float} value=Float |
	{Function} function=Function |
	'(' Addition ')';

Float:
	INT* ('.' INT+ ( ('E'|'e') ('-')? (INT)+ )?)?;

Function returns Expression:
	(name=MATH_NAME) '(' formula=Formula ')'
;

FunctionDefinition:
	name=MATH_NAME '(' (parameters+=MATH_NAME (',' parameters+=MATH_NAME)* ','?)? ')' '=' formula=Formula
;

terminal MATH_NAME returns ecore::EString:
    ( 'a'..'z' | 'A'..'Z' | '_' ) ( 'a'..'z' | 'A'..'Z' | '_' | '0'..'9' )*;

/*
Expression:
	PrimaryExpression {Plus.left=current} '+' right=Expression |
	PrimaryExpression {Minus.left=current} '-' right=Expression |
	PrimaryExpression {Mult.left=current} '*' right=Expression |
	PrimaryExpression {Div.left=current} '/' right=Expression |
	PrimaryExpression {Pow.base=current} '^' power=Expression |
	PrimaryExpression;

PrimaryExpression returns Expression:
	'(' Expression ')' |
	{Variable} name=ID |
	{Number} value=INT;
*/