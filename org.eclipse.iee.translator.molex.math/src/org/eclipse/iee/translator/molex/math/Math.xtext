grammar org.eclipse.iee.translator.molex.math.Math with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
generate math "http://www.eclipse.org/iee/translator/molex/math/Math"

Statement:
	functionDefinition=FunctionDefinition |
	matrixDefinition=MatrixDefinition |
	assignment=Assignment |
	formula=Formula;

Assignment:
	variable=MATH_NAME '=' value=Formula;

Formula:
	expression=(Addition);

	// addition/subtraction: left associative, priority 0
Addition returns Expression:
	Multiplication ('+' {Addition.left=current} right=Multiplication | '-' {Subtraction.left=current}
	right=Multiplication)*;

	// multiplication/division, left associative, priority 1
Multiplication returns Expression:
	UnaryExpression ('*' {Multiplication.left=current} right=UnaryExpression | '/' {Division.left=current}
	right=UnaryExpression | '%' {Modulo.left=current} right=UnaryExpression)*;

	// Unary operators: right associative, priority 2
UnaryExpression returns Expression:
	Exponent |
	('-' {Invert} expression=UnaryExpression) |
	'(' {Factorial} expression=UnaryExpression ')!'|
	{Interval} openingBracket=('['|'(') '('ceil=UnaryExpression')' '..' '('floor=UnaryExpression')' closingBracket=(']'|')');

	// exponentiation: right associative, priority 3
Exponent returns Expression:
	Primary ({Exponent.left=current} '^' right=Primary)?;

Primary returns Expression:
	{Variable} name=MATH_NAME |
	{Float} value=Float |
	{Function} function=Function |
	'(' Addition ')';

Float:
	INT+ ('.' INT+ (('E' | 'e') ('-')? (INT)+)?)?;

Function returns Expression:
	(name=MATH_NAME) '(' (parameters+=Formula (',' parameters+=Formula)* ','?)? ')';

FunctionDefinition:
	function=Function '=' formula=Formula;

MatrixDefinition:
	(name=MATH_NAME) '=' '{' (rows+=MatrixRow (',' rows+=MatrixRow)* ','?)? '}';

MatrixRow:
	'{' (elements+=Float (',' elements+=Float)* ','?)? '}';

terminal MATH_NAME returns ecore::EString:
	('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;